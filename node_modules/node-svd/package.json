{
  "name": "node-svd",
  "description": "Singular-Value-Decomposition using SVDLIBC",
  "version": "0.1.3",
  "homepage": "https://github.com/xionluhnis/node-svd",
  "engines": {
    "node": ">=0.12.0"
  },
  "dependencies": {},
  "author": {
    "name": "Alexandre Kaspar",
    "email": "xion.luhnis@gmail.com"
  },
  "contributers": [
    {
      "name": "Florian Reifschneider",
      "email": "florian@rocketloop.de"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/xionluhnis/node-svd.git"
  },
  "bugs": {
    "url": "http://github.com/xionluhnis/node-svd/issues"
  },
  "keywords": [
    "svd",
    "math",
    "linear",
    "algebra",
    "SVDLIBC"
  ],
  "main": "./svd.node",
  "maintainers": [
    {
      "name": "Alexandre Kaspar",
      "email": "xion.luhnis@gmail.com",
      "url": "http://www.wox-xion.ch"
    }
  ],
  "scripts": {
    "install": "node-gyp rebuild && cp build/Release/svd.node ./svd.node"
  },
  "gitHead": "64b90a209ac8176e6adde62dfc0ee4b886ff8f14",
  "readme": "node-svd\n========\n\nNode.js module for [SVDLIBC](http://tedlab.mit.edu/~dr/SVDLIBC/) providing fast *Singular-Value-Decomposition* with ease.\n\nChanges\n=======\n  * **0.1.3** - Now works with node version 0.12 and above\n\n  * **0.1.2** - changed the Init method to InitSVD because of a name conflict with the new version of node\n\nHow to install\n==============\n\nYou need **node-gyp** to be available as a command within the environment. Then, assuming it is available, simply use:\n\n```Bash\nnpm install node-svd\n```\n\nHow to use\n==========\n\nThe module simply provide a function svd of signature:\n```Javascript\n/**\n * @param A [row1, row2 ...] matrix to apply svd onto\n * @param dim the number of singular values to keep, 0 for all (default)\n * @param settings { U, V, debug }\n * @return {d, U, S, V}\n */\n```\n\nAbout the settings:\n* **debug** is a number from 0, 1 (default) and 2 describing the verbosity\n* **U** is a boolean setting whether to untranspose the result *Ut* to *U* (true, by default)\n* **V** is a boolean setting whether to untranspose the result *Vt* to *V* (false, by default)\n\nThe untransposition is provided because SVDLIBC result provides *Ut* and *Vt*, which are the transposed *U* and *V*, thus of dimensions (d by m) and (d by n).\n*Vt* may be wanted, but if you want to recompute the initial *A*, you need *U* and not *Ut*, thus the default values.\nNote that it doesn't add any overhead.\n\nExample\n=======\n\nThe basic is really simple:\n```Javascript\nvar svd = require('svd').svd;\nvar res = svd(myMatrix, dim, settings);\n// use res.U, res.S and res.V\n```\n\nTest\n====\n\nThe basic example given in 'test.js' computes the svd of the simple matrix:\n```Javascript\n A = [\n  [1, 2],\n  [3, 4],\n  [5, 6]\n];\n```\n\nThe resulting U, S and V are displayed, and then the matrix A is recomputed (brute-force implementation of matrix multiplication) by simply multiplying back the parts together.\nFloating point errors put aside, the results are the same (at least for that case).\n\nTest check with Matlab / Octave\n===============================\n\nSimply use :\n```Matlab\nA = [1, 2; 3, 4; 5, 6];\n[u, s, v] = svd(A)\nB = u * s * v\nC = u(1:3, 1:2) * s(1:2, 1:2) * v\n```\n\nLICENSE\n=======\n\nThe MIT License\n\nCopyright 2012 Alexandre Kaspar xion.luhnis@gmail.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "node-svd@0.1.3",
  "_shasum": "faac55c7e72ca187b9ca8516f2b80c55bbb7d3c5",
  "_from": "git+https://github.com/xionluhnis/node-svd.git",
  "_resolved": "git+https://github.com/xionluhnis/node-svd.git#64b90a209ac8176e6adde62dfc0ee4b886ff8f14"
}
